#!/bin/bash
#
# ~/.bashrc_prompt -- bash configuration for prompt
# Copyright (C) 2012  Alan "Shtark" SCHNEIDER
#                     <shk.schneider[at]gmail.com>
#
# This program comes with ABSOLUTELY NO WARRANTY.
# This is free software, and you are welcome to redistribute it
# under certain conditions.
#

# git: really cool
function __ps1_git() {
    local DIR USER PROJECT BRANCH COMMITS STATUS
    DIR=$1
    [ -f $DIR/config ] && USER=$(egrep '^\s*name\s*=\s*.+' $DIR/config | sed -r 's/^\s*name\s*=\s*//' | tr -d "'\"")
    [ -z "$USER" -a -f ~/.gitconfig ] && USER=$(egrep '^\s*name\s*=\s*.+' ~/.gitconfig | sed -r 's/^\s*name\s*=\s*//' | tr -d "'\"")
    [ -z "$USER" ] && USER=$(whoami)
    PROJECT=$(pwd | sed -r "s#^`dirname $(git rev-parse --show-toplevel)`/##")
    BRANCH=$(git branch --no-color | egrep '^\*' | cut -d' ' -f2)
    COMMITS=$(git status | sed -n '2p' | sed -r "s/'.+'//g" | sed -r 's/[^0-9]//g')
    [ -z "$COMMITS" ] && COMMITS="0"
    STATUS1=$(git status --porcelain | sed -r 's/^\?\?/ ?/g' | cut -c1 | tr -d " " | sort | uniq | tr -d "\n")
    [ -n "$STATUS1" ] && COLOR1="\e[1;33m"
    STATUS2=$(git status --porcelain | sed -r 's/^\?\?/ ?/g' | cut -c2 | tr -d " " | sort | uniq | tr -d "\n")
    [ -n "$STATUS2" ] && COLOR2="\e[1;31m"
    COLOR="\e[1;32m"
    [ -n "$STATUS2" ] && COLOR="$COLOR2" || COLOR="$COLOR1"
    [ -n "$STATUS1$STATUS2" ] && SEP="|"
    [ "$COMMITS" = "0" ] && CCOLOR="\e[1;32m" || CCOLOR="\e[1;33m"
    printf "\e[1;34m%s ${JCOLOR}%s \e[1;32m%s/ ${COLOR}%s ${CCOLOR}+%s \e[1;34m(${COLOR1}%s\e[1;34m%s${COLOR2}%s\e[1;34m) \$\e[0m " "$USER" "$JOBS" "$PROJECT" "$BRANCH" "$COMMITS" "$STATUS1" "$SEP" "$STATUS2"
}

# hg: really slow
function __ps1_hg() {
    local DIR USER PROJECT BRANCH STATUS
    DIR=$(hg root)
    [ -d $DIR/.hg -a -f $DIR/.hg/hgrc ] && USER=$(egrep '^\s*username\s*=\s*.+' $DIR/.hg/hgrc | sed -r 's/^\s*username\s*=\s*//' | cut -d'<' -f1 | sed -r 's/\s+$//' | tr -d "'\"")
    [ -z "$USER" -a -f ~/.hgrc ] && USER=$(egrep '^\s*usernamename\s*=\s*.+' ~/.hgrc | sed -r 's/^\s*username\s*=\s*//' | cut -d'<' -f1 | sed -r 's/\s+$//' | tr -d "'\"")
    [ -z "$USER" ] && USER=$(whoami)
    PROJECT=$(pwd | sed -r "s#^`dirname $DIR`/##")
    BRANCH=$(hg branch | awk '{print $1}')
    STATUS=$(hg status | awk '{print $1}' | sort | uniq | tr -d "\n")
    [ -n "$STATUS" ] && COLOR="\e[1;33m" || COLOR="\e[1;32m"
    [ -n "`echo $STATUS | grep '?'`" ] && COLOR="\e[1;31m"
    printf "\e[1;34m%s ${JCOLOR}%s \e[1;32m%s/ ${COLOR}%s \e[1;34m(\e[1;31m%s\e[1;34m) \$\e[0m " "$USER" "$JOBS" "$PROJECT" "$BRANCH" "$STATUS"
}

# svn: less info
function __ps1_svn() {
    local DIR USER PROJECT PARENT BRANCH STATUS
    DIR=".svn"
    USER=$(whoami)
    PROJECT=""
    PARENT="."
    while [ -d "$PARENT/.svn" ]; do
	PROJECT=$PARENT
	PARENT="$PARENT/.."
    done
    cd $PROJECT && PROJECT=$(dirname `pwd`) && cd - > /dev/null
    PROJECT=$(pwd | sed -r "s#^$PROJECT/##")
    REVISION=$(svn info | sed -n '5p' | rev | cut -d' ' -f1 | rev)
    STATUS=$(svn st | awk '{print $1}' | sort | uniq | tr -d "\n")
    [ -n "$STATUS" ] && COLOR="\e[1;33m" || COLOR="\e[1;32m"
    [ -n "`echo $STATUS | grep '?'`" ] && COLOR="\e[1;31m"
    printf "\e[1;34m%s ${JCOLOR}%s \e[1;32m%s ${COLOR}#%s \e[1;34m(\e[1;31m%s\e[1;34m) \$\e[0m " "$USER" "$JOBS" "$PROJECT" "$REVISION" "$STATUS"
}

# This decides which function to call to draw PS1
function __ps1() {
    JOBS=$(jobs | wc -l)
    [ $JOBS -eq 0 ] && JCOLOR="\e[1;32m"
    [ $JOBS -eq 1 ] && JCOLOR="\e[1;33m"
    [ $JOBS -gt 1 ] && JCOLOR="\e[1;31m"
    if [ `id -u` -eq 0 ] ; then
        export PS1="\e[1;31m\u@\h $JOBS \e[1;34m\w \$\e[0m "
    else
	GIT=$(git rev-parse --git-dir 2> /dev/null)
	if [ -n "$GIT" -a "$GIT" != "." ] ; then
	    export PS1=$(__ps1_git "$GIT")
	elif [ -n "`hg root 2> /dev/null`" ] ; then
	    export PS1=$(__ps1_hg)
	elif [ -n "`svn info 2> /dev/null`" ] ; then
	    export PS1=$(__ps1_svn)
	else
	    if [ -z "`pwd | egrep "^$HOME"`" ] ; then
		export PS1="\e[1;33m\u@\h $JCOLOR$JOBS \e[1;34m\w \$\e[0m "
	    else
		export PS1="\e[1;32m\u@\h $JCOLOR$JOBS \e[1;34m\w \$\e[0m "
	    fi
	fi
    fi
}

# This defines the function that will decide who draws PS1
PROMPT_COMMAND=__ps1

# EOF
